<?php

require_once realpath( __DIR__ . '/..' ) . '/Bowling.php';

/**
 * Test class for Bowling.
 * Generated by PHPUnit on 2011-07-31 at 13:09:18.
 */
class BowlingTest extends PHPUnit_Framework_TestCase {

	public function testThrowing9PinsInFirstFrame()
	{
		$this->bowling = new Bowling( array( 9, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 9, $this->bowling->getScore() );
	}

	public function testThrowing5PinsInFirstFrame()
	{
		$this->bowling = new Bowling( array( 5, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 5, $this->bowling->getScore() );
	}

	public function testThrowing12PinsInFirstFrameWithoutStrike()
	{
		$this->bowling = new Bowling( array( 9, 3, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 12, $this->bowling->getScore() );
	}

	public function testThrowing12PinsInSecondFrameWithoutStrike()
	{
		$this->bowling = new Bowling( array( '-', '-', 9, 3, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 12, $this->bowling->getScore() );
	}

	public function testThrowing12PinsBetweenFirstAndSecondFrameWithoutStrike()
	{
		$this->bowling = new Bowling( array( 9, '-', '-', 3, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 12, $this->bowling->getScore() );
	}

	public function testThrowingSpareInFirstFrameAnd2PinsInSecondIs14()
	{
		$this->bowling = new Bowling( array( 5, '/', 2, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 14, $this->bowling->getScore() );
	}

	public function testThrowingSpareInFirstFrameAnd2And3PinsInSecondIs17()
	{
		$this->bowling = new Bowling( array( 5, '/', 2, 3, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 17, $this->bowling->getScore() );
	}

	public function testThrowingSpareInFirstFrameAndSpareInSecondAnd2PinsInThirdIs26()
	{
		$this->bowling = new Bowling( array( 5, '/', 2, '/', 2, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 26, $this->bowling->getScore() );
	}

	public function testOneStrikeInFirstThrowIs10()
	{
		$this->bowling = new Bowling( array( 'X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 10, $this->bowling->getScore() );
	}

	public function testOneStrikeInFirstThrowAnd2PinsIs14()
	{
		$this->bowling = new Bowling( array( 'X', 2, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 14, $this->bowling->getScore() );
	}

	public function testOneStrikeInFirstThrowAnd2And3PinsIs20()
	{
		$this->bowling = new Bowling( array( 'X', 2, 3, '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 20, $this->bowling->getScore() );
	}

	public function testComplexFrameThatScores81()
	{
		$this->bowling = new Bowling( array( 'X', 2, 3, 4, '/', 2, 5, 'X', 'X', 2, 3, '-', '-', '-', '-', '-', '-', '-', '-' ) );
		$this->assertEquals( 81, $this->bowling->getScore() );
	}

	public function testEndingInSpare()
	{
		$this->bowling = new Bowling( array( 2, 3, '-', '-', '-', '-', '-', '-', '-', '/', 2 ) );
		$this->assertEquals( 17, $this->bowling->getScore() );
	}

	public function testEndingInStrike()
	{
		$this->bowling = new Bowling( array( '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X', 'X', 'X' ) );
		$this->assertEquals( 30, $this->bowling->getScore() );
	}

	public function testFullStrikes()
	{
		$this->bowling = new Bowling( array( 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X' ) );
		$this->assertEquals( 300, $this->bowling->getScore() );
	}

	public function testEndingInStrikeAndSpare()
	{
		$this->bowling = new Bowling( array( '-', '-', 2, 3, 'X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X', 2, '/' ) );
		$this->assertEquals( 35, $this->bowling->getScore() );
	}

	public function test10PairsOf9AndMiss()
	{
		$this->bowling = new Bowling( array( 9, '-', 9, '-', 9, '-', 9, '-' , 9, '-' , 9, '-' , 9, '-' , 9, '-' , 9, '-' , 9, '-'  ) );
		$this->assertEquals( 90, $this->bowling->getScore() );
	}

	public function test10PairsOf5AndSpareWithFinal5()
	{
		$this->bowling = new Bowling( array( 5, '/', 5, '/', 5, '/', 5, '/', 5, '/', 5, '/', 5, '/', 5, '/', 5, '/', 5, '/', 5 ) );
		$this->assertEquals( 150, $this->bowling->getScore() );
	}
}
?>
